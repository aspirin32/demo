---
# tasks file for http
- name: nginx install # nginx installation
  apt:
    name: nginx-full
    state: latest
    update_cache: yes
  notify: start nginx
- name: create config in sites-available
  copy:
      dest: /etc/nginx/sites-available/default # required. Remote absolute path where the file should be copied to. If C(src) is a directory, this must be a directory too. If C(dest) is a non-existent path and if either C(dest) ends with "/" or C(src) is a directory, C(dest) is created. If I(dest) is a relative path, the starting directory is determined by the remote host. If C(src) and C(dest) are files, the parent directory of C(dest) is not created and the task fails if it does not already exist.
      src: ~/My_Project/SF_Project/Ansible/roles/http/files/default # not required. Local path to a file to copy to the remote server. This can be absolute or relative. If path is a directory, it is copied recursively. In this case, if path ends with "/", only inside contents of that directory are copied to destination. Otherwise, if it does not end with "/", the directory itself with all contents is copied. This behavior is similar to the C(rsync) command line tool.
      force: yes
  notify: restart nginx
- name: make dir 
  file:
    mode: '777'
    path: /opt/nginx/ansible # required. Path to the file being managed.
    state: directory # not required. choices: absent;directory;file;hard;link;touch. If C(absent), directories will be recursively deleted, and files or symlinks will be unlinked. In the case of a directory, if C(diff) is declared, you will see the files and folders deleted listed under C(path_contents). Note that C(absent) will not cause C(file) to fail if the C(path) does not exist as the state did not change. If C(directory), all intermediate subdirectories will be created if they do not exist. Since Ansible 1.7 they will be created with the supplied permissions. If C(file), without any other options this works mostly as a 'stat' and will return the current state of C(path). Even with other options (i.e C(mode)), the file will be modified but will NOT be created if it does not exist; see the C(touch) value or the M(copy) or M(template) module if you want that behavior. If C(hard), the hard link will be created or changed. If C(link), the symbolic link will be created or changed. If C(touch) (new in 1.4), an empty file will be created if the C(path) does not exist, while an existing file or directory will receive updated file access and modification times (similar to the way C(touch) works from the command line).
- name: create content in new root
  copy:
      dest: /opt/nginx/ansible/index.php # required. Remote absolute path where the file should be copied to. If C(src) is a directory, this must be a directory too. If C(dest) is a non-existent path and if either C(dest) ends with "/" or C(src) is a directory, C(dest) is created. If I(dest) is a relative path, the starting directory is determined by the remote host. If C(src) and C(dest) are files, the parent directory of C(dest) is not created and the task fails if it does not already exist.
      src: ~/My_Project/SF_Project/Ansible/roles/http/files/index.php
- name: restart nginx
  service:
    name: nginx # required. Name of the service.
    state: restarted