apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-db'
  labels:
    katenary.io/component: db
    katenary.io/project: '{{ .Chart.Name }}'
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: 495b7d6d7be2e96df4b3ae0833de4f381dea6226
    katenary.io/version: 2.0.0-beta2
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: db
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: db
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      containers:
        - name: db
          image: '{{ .Values.db.repository.image }}{{ if ne .Values.db.repository.tag "" }}:{{ .Values.db.repository.tag }}{{ end }}'
          ports:
            - name: db
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: '{{ tpl .Values.db.environment.POSTGRES_USER . }}'
            - name: POSTGRES_PASSWORD
              value: '{{ tpl .Values.db.environment.POSTGRES_PASSWORD . }}'
            - name: POSTGRES_DB
              value: '{{ tpl .Values.db.environment.POSTGRES_DB . }}'
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: tutorialvolume
      volumes:
        - name: tutorialvolume
          {{- if  .Values.db.persistence.tutorialvolume.enabled }}
          persistentVolumeClaim:
            claimName: '{{ .Release.Name }}-tutorialvolume'
          {{ else }}
          emptyDir: {}
          {{- end }}

